<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://shijohn.github.io</id>
    <title>伊索</title>
    <updated>2021-05-26T10:48:16.011Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://shijohn.github.io"/>
    <link rel="self" href="https://shijohn.github.io/atom.xml"/>
    <subtitle>科技艺术人文</subtitle>
    <logo>https://shijohn.github.io/images/avatar.png</logo>
    <icon>https://shijohn.github.io/favicon.ico</icon>
    <rights>All rights reserved 2021, 伊索</rights>
    <entry>
        <title type="html"><![CDATA[印象余杭]]></title>
        <id>https://shijohn.github.io/yin-xiang-yu-hang/</id>
        <link href="https://shijohn.github.io/yin-xiang-yu-hang/">
        </link>
        <updated>2021-05-26T10:10:32.000Z</updated>
        <summary type="html"><![CDATA[<p>照片摄于2014年。<br>
<img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E5%8D%B0%E8%B1%A1%E4%BD%99%E6%9D%AD/%E5%8D%B0%E8%B1%A1%E4%BD%99%E6%9D%AD%20(4).jpg" alt="4" loading="lazy"></p>
]]></summary>
        <content type="html"><![CDATA[<p>照片摄于2014年。<br>
<img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E5%8D%B0%E8%B1%A1%E4%BD%99%E6%9D%AD/%E5%8D%B0%E8%B1%A1%E4%BD%99%E6%9D%AD%20(4).jpg" alt="4" loading="lazy"></p>
<!-- more -->
<p><img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E5%8D%B0%E8%B1%A1%E4%BD%99%E6%9D%AD/%E5%8D%B0%E8%B1%A1%E4%BD%99%E6%9D%AD%20(1).jpg" alt="1" loading="lazy"><br>
<img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E5%8D%B0%E8%B1%A1%E4%BD%99%E6%9D%AD/%E5%8D%B0%E8%B1%A1%E4%BD%99%E6%9D%AD%20(2).jpg" alt="2" loading="lazy"><br>
<img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E5%8D%B0%E8%B1%A1%E4%BD%99%E6%9D%AD/%E5%8D%B0%E8%B1%A1%E4%BD%99%E6%9D%AD%20(3).jpg" alt="3" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[印象五台]]></title>
        <id>https://shijohn.github.io/yin-xiang-wu-tai/</id>
        <link href="https://shijohn.github.io/yin-xiang-wu-tai/">
        </link>
        <updated>2021-05-26T09:59:41.000Z</updated>
        <summary type="html"><![CDATA[<p>照片摄于2015年6月，6年回首，一段过往，一段时光。<br>
<img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E5%8D%B0%E8%B1%A1%E4%BA%94%E5%8F%B0/%E5%8D%B0%E8%B1%A1%E4%BA%94%E5%8F%B0%20(1).jpg" alt="印象五台1" loading="lazy"></p>
]]></summary>
        <content type="html"><![CDATA[<p>照片摄于2015年6月，6年回首，一段过往，一段时光。<br>
<img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E5%8D%B0%E8%B1%A1%E4%BA%94%E5%8F%B0/%E5%8D%B0%E8%B1%A1%E4%BA%94%E5%8F%B0%20(1).jpg" alt="印象五台1" loading="lazy"></p>
<!-- more -->
<p><img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E5%8D%B0%E8%B1%A1%E4%BA%94%E5%8F%B0/%E5%8D%B0%E8%B1%A1%E4%BA%94%E5%8F%B0%20(3).jpg" alt="印象五台3" loading="lazy"><br>
<img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E5%8D%B0%E8%B1%A1%E4%BA%94%E5%8F%B0/%E5%8D%B0%E8%B1%A1%E4%BA%94%E5%8F%B0%20(4).jpg" alt="印象五台4" loading="lazy"><br>
<img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E5%8D%B0%E8%B1%A1%E4%BA%94%E5%8F%B0/%E5%8D%B0%E8%B1%A1%E4%BA%94%E5%8F%B0%20(5).jpg" alt="印象五台5" loading="lazy"><br>
<img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E5%8D%B0%E8%B1%A1%E4%BA%94%E5%8F%B0/%E5%8D%B0%E8%B1%A1%E4%BA%94%E5%8F%B0%20(6).jpg" alt="印象五台6" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[三层架构与MVC]]></title>
        <id>https://shijohn.github.io/san-ceng-jia-gou-yu-mvc/</id>
        <link href="https://shijohn.github.io/san-ceng-jia-gou-yu-mvc/">
        </link>
        <updated>2021-04-22T07:28:23.000Z</updated>
        <summary type="html"><![CDATA[<p>所谓系统架构是指，整合应用系统程序大的结构。经常提到的系统结构有两种：三层架构与 MVC。这两种结构既有区别，又有联系。但这两种结构的使用，均是为了降低系统模块间的耦合度。</p>
]]></summary>
        <content type="html"><![CDATA[<p>所谓系统架构是指，整合应用系统程序大的结构。经常提到的系统结构有两种：三层架构与 MVC。这两种结构既有区别，又有联系。但这两种结构的使用，均是为了降低系统模块间的耦合度。</p>
<!--more-->
<h1 id="什么是三层架构">什么是三层架构</h1>
<h2 id="什么是系统架构">什么是系统架构</h2>
<p>所谓系统架构是指，整合应用系统程序大的结构。经常提到的系统结构有两种：三层架构与 MVC。这两种结构既有区别，又有联系。但这两种结构的使用，均是为了降低系统模块间的耦合度。</p>
<blockquote>
<p>复杂度 = 耦合度</p>
</blockquote>
<h2 id="什么是三层架构-2">什么是三层架构</h2>
<p>三层架构是指：视图层 View、服务层 Service，与持久层 （数据访问层）DAO。它们分别完成不同的功能。</p>
<ul>
<li>View 层：用于接收用户提交请求的代码。</li>
<li>Service 层：系统的业务逻辑主要在这里完成。</li>
<li>DAO 层：直接操作数据库的代码（Data Access Object）。</li>
</ul>
<p>为了更好的降低各层间的耦合度，在三层架构程序设计中，采用面向抽象编程。即上层对下层的调用，是通过接口实现的。而下层对上层的真正服务提供者，是下层接口的实现类。服务标准（接口）是相同的，服务提供者（实现类）可以更换。这就实现了层间解耦合。</p>
<figure data-type="image" tabindex="1"><img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E4%B8%8EMVC/%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E4%B8%8EMVC-1.png" alt="三层架构与MVC-1" loading="lazy"></figure>
<p>业务是核心，技术是辅助业务的。</p>
<p>业务是有复杂度的，分三级：</p>
<ul>
<li>简单业务：只开启一个事务。</li>
<li>普通业务：开启三个事务。</li>
<li>复杂业务：开启七个事务。</li>
</ul>
<h1 id="什么是-mvc-模式">什么是 MVC 模式</h1>
<h2 id="概述">概述</h2>
<p>MVC，即 Model 模型、View 视图，及 Controller 控制器。</p>
<ul>
<li>
<p>View：视图，为用户提供使用界面，与用户直接进行交互。</p>
</li>
<li>
<p>Model：模型，承载数据，并对用户提交请求进行计算的模块。其分为两类，一类称为数据承载 Bean，一类称为业务处理 Bean。所谓数据承载 Bean 是指实体类，专门用户承载业务数据的，如 Student、User 等。而业务处理 Bean 则是指 Service 或 Dao 对象， 专门用于处理用户提交请求的。</p>
<p><strong>数据模型</strong> -&gt; Entity</p>
<p><strong>业务模型</strong> -&gt; Service</p>
<p>Controller：控制器，用于将用户请求转发给相应的 Model 进行处理，并根据 Model 的计算结果向用户提供相应响应。</p>
</li>
</ul>
<h2 id="mvc-架构程序的工作流程">MVC 架构程序的工作流程</h2>
<ul>
<li>用户通过 View 页面向服务端提出请求，可以是表单请求、超链接请求、AJAX 请求等。</li>
<li>服务端 Controller 控制器接收到请求后对请求进行解析，找到相应的 Model 对用户请求进行处理</li>
<li>Model 处理后，将处理结果再交给 Controller</li>
<li>Controller 在接到处理结果后，根据处理结果找到要作为向客户端发回的响应 View 页面。页面经渲染（数据填充）后，再发送给客户端。</li>
</ul>
<figure data-type="image" tabindex="2"><img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E4%B8%8EMVC/%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E4%B8%8EMVC-2.png" alt="三层架构与MVC-2" loading="lazy"></figure>
<h2 id="三层架构-mvc-示意图">三层架构 + MVC 示意图</h2>
<figure data-type="image" tabindex="3"><img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E4%B8%8EMVC/%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E4%B8%8EMVC-3.png" alt="三层架构与MVC-3" loading="lazy"></figure>
<h1 id="小知识-高内聚低耦合">小知识-高内聚，低耦合</h1>
<p>一种类只做一种事；</p>
<p>一个方法只做一件事；</p>
<p>写且只写一次。</p>
<h1 id="三层架构">三层架构</h1>
<p>MAVEN项目只要有POM就可以创建。</p>
<p>TDD 测试驱动编程</p>
<p>Q: IDEA的MAVEN工具栏不显示？</p>
<p>A: 1. 首先view &gt;Tool Windows &gt; Maven，如果没有Maven项说明MAVEN环境没配置好；</p>
<figure data-type="image" tabindex="4"><img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E4%B8%8EMVC/%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E4%B8%8EMVC-4.png" alt="三层架构与MVC-4" loading="lazy"></figure>
<ol start="2">
<li>打开File&gt;Settings（快捷键Ctrl+Shift+S）&gt;Build,Execution,Deployment&gt;Build Tools&gt;Maven，显式maven的环境，看是否为正确的配置。</li>
<li>1和2调整后均需重启IDEA。</li>
</ol>
<figure data-type="image" tabindex="5"><img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E4%B8%8EMVC/%E4%B8%89%E5%B1%82%E6%9E%B6%E6%9E%84%E4%B8%8EMVC-5.png" alt="三层架构与MVC-5" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[钉钉直播回放下载教程]]></title>
        <id>https://shijohn.github.io/ding-ding-zhi-bo-hui-fang-xia-zai-jiao-cheng/</id>
        <link href="https://shijohn.github.io/ding-ding-zhi-bo-hui-fang-xia-zai-jiao-cheng/">
        </link>
        <updated>2021-04-22T07:27:06.000Z</updated>
        <summary type="html"><![CDATA[<p>Author：John SHI，Update：2020年4月13日</p>
<p>本教程不仅适用于钉钉直播回放的下载，同样适用于其他基于M3U8文件的<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fzh.wikipedia.org%2Fwiki%2FHTTP_Live_Streaming">HTTP Live Streaming（缩写为 HLS）</a> 协议视频。</p>
]]></summary>
        <content type="html"><![CDATA[<p>Author：John SHI，Update：2020年4月13日</p>
<p>本教程不仅适用于钉钉直播回放的下载，同样适用于其他基于M3U8文件的<a href="https://links.jianshu.com/go?to=https%3A%2F%2Fzh.wikipedia.org%2Fwiki%2FHTTP_Live_Streaming">HTTP Live Streaming（缩写为 HLS）</a> 协议视频。</p>
<!--more-->
<hr>
<h2 id="1-前置条件">1. 前置条件</h2>
<h3 id="11-所需工具">1.1 所需工具</h3>
<ul>
<li>N_m3u8DL-CLI
<ul>
<li>N_m3u8DL-CLI是一款用于下载m3u8的命令行工具，基于.NET Framework 4.6框架开发，调用系统类库进行HTTP下载，支持常见的m3u8格式下载，支持从视频中选择一部分下载，还提供丰富的命令行选项以增强其功能。</li>
<li>使用说明：https://nilaoda.github.io/N_m3u8DL-CLI/</li>
<li>下载地址：https://github.com/nilaoda/N_m3u8DL-CLI_Core</li>
</ul>
</li>
<li>HttpAnalyzer
<ul>
<li>HTTP Analyzer是一个嗅探器或查看器，允许实时监视和检查HTTP / HTTPS流量。它可以跟踪和显示各种信息，包括标题，内容，Cookie，查询字符串，发布数据，请求和响应流，重定向URL等。它有一个请求构建器，使您可以手动编写HTTP / HTTPS请求。它还提供缓存信息和会话清除，以及HTTP状态代码信息和多个筛选选项。一个有用的开发工具，用于性能分析，调试和诊断。可以捕获来自某些特定进程或用户/会话/系统范围应用程序的HTTP / HTTPS流量。它能够在Windows应用程序中捕获HTTP信息，而无需从HTTP Analyzer中启动它们。如果应用程序使用Microsoft WININET API（例如，outlook），Mozilla NSS API，则HTTPS可用。 （例如firefox，thunderbird）或OpenSSL。</li>
<li>下载地址：http://www.pc6.com/softview/SoftView_446176.html</li>
</ul>
</li>
<li>钉钉
<ul>
<li>不解释。</li>
</ul>
</li>
</ul>
<h3 id="12-m3u8简介">1.2 M3U8简介</h3>
<p>m3u8 文件实质是一个播放列表（playlist），其可能是一个媒体播放列表（Media Playlist），或者是一个主列表（Master Playlist）。但无论是哪种播放列表，其内部文字使用的都是 utf-8 编码。</p>
<p>当 m3u8 文件作为媒体播放列表（Meida Playlist）时，其内部信息记录的是一系列媒体片段资源，顺序播放该片段资源，即可完整展示多媒体资源。其格式如下所示：</p>
<pre><code class="language-txt">#EXTM3U
#EXT-X-TARGETDURATION:10

#EXTINF:9.009,
http://media.example.com/first.ts
#EXTINF:9.009,
http://media.example.com/second.ts
#EXTINF:3.003,
http://media.example.com/third.ts
</code></pre>
<p>对于点播来说，客户端只需按顺序下载上述片段资源，依次进行播放即可。而对于直播来说，客户端需要 <strong>定时重新请求</strong> 该 m3u8 文件，看下是否有新的片段数据需要进行下载并播放。</p>
<h3 id="13-hls简介">1.3 HLS简介</h3>
<p>HLS 是一个由苹果公司提出的基于 HTTP 的流媒体网络传输协议。</p>
<p>HLS 的工作原理是把整个流分成一个个小的基于 HTTP 的文件来下载，每次只下载一些。当媒体流正在播放时，客户端可以选择从许多不同的备用源中以不同的速率下载同样的资源，允许流媒体会话适应不同的数据速率。在开始一个流媒体会话时，客户端会下载一个包含元数据的 extended M3U (m3u8) playlist文件，用于寻找可用的媒体流。<br>
HLS 只请求基本的 HTTP 报文，与实时传输协议（RTP）不同，HLS 可以穿过任何允许 HTTP 数据通过的防火墙或者代理服务器。它也很容易使用内容分发网络来传输媒体流。</p>
<p>简而言之，HLS 是新一代流媒体传输协议，其基本实现原理为将一个大的媒体文件进行分片，将该分片文件资源路径记录于 m3u8 文件（即 playlist）内，其中附带一些额外描述（比如该资源的多带宽信息···）用于提供给客户端。客户端依据该 m3u8 文件即可获取对应的媒体资源，进行播放。</p>
<p>因此，客户端获取 HLS 流文件，主要就是对 m3u8 文件进行解析操作。</p>
<h2 id="2-下载步骤">2 下载步骤</h2>
<h3 id="21-钉钉准备">2.1 钉钉准备</h3>
<figure data-type="image" tabindex="1"><img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E9%92%89%E9%92%89%E7%9B%B4%E6%92%AD%E5%9B%9E%E6%94%BE%E4%B8%8B%E8%BD%BD/%E9%92%89%E9%92%89%E7%9B%B4%E6%92%AD%E5%9B%9E%E6%94%BE-1.png" alt="钉钉直播回放-1.png" loading="lazy"></figure>
<ul>
<li>打开并登录钉钉。</li>
<li>①找到需要下载直播回放的群。</li>
<li>②打开直播回放列表。<br>
注意：此时先不要打开需要下载的直播回放，即<code>先不要进行③操作</code>。</li>
</ul>
<h3 id="22-http-analyzer准备">2.2 Http Analyzer准备</h3>
<figure data-type="image" tabindex="2"><img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E9%92%89%E9%92%89%E7%9B%B4%E6%92%AD%E5%9B%9E%E6%94%BE%E4%B8%8B%E8%BD%BD/%E9%92%89%E9%92%89%E7%9B%B4%E6%92%AD%E5%9B%9E%E6%94%BE-2.png" alt="钉钉直播回放-2.png" loading="lazy"></figure>
<ul>
<li>打开Http Analyzer。</li>
<li>①点击<code>开始</code>右边的下拉箭头。</li>
<li>②在弹出的下拉列表中，点击<code>选中运行中的进程…</code>。</li>
<li>③在弹出的<code>附加到进程</code>对话框中，勾选所有的<code>dingtalk.exe*32</code>进程。</li>
<li>④点击<code>确定</code>。</li>
</ul>
<h3 id="22-正式下载">2.2  正式下载</h3>
<figure data-type="image" tabindex="3"><img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E9%92%89%E9%92%89%E7%9B%B4%E6%92%AD%E5%9B%9E%E6%94%BE%E4%B8%8B%E8%BD%BD/%E9%92%89%E9%92%89%E7%9B%B4%E6%92%AD%E5%9B%9E%E6%94%BE-3.png" alt="钉钉直播回放-3.png" loading="lazy"></figure>
<ul>
<li>
<p>正式开始下载前，点击Http Analyzer工具栏中的<code>清空</code>，将历史捕获清空。</p>
</li>
<li>
<p>然后，在钉钉中打开需要下载的直播回放，即<code>2.1节的③操作</code>。</p>
</li>
<li>
<p>钉钉直播回放开始后，Http Analyzer捕获到钉钉的请求记录。</p>
</li>
</ul>
<figure data-type="image" tabindex="4"><img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E9%92%89%E9%92%89%E7%9B%B4%E6%92%AD%E5%9B%9E%E6%94%BE%E4%B8%8B%E8%BD%BD/%E9%92%89%E9%92%89%E7%9B%B4%E6%92%AD%E5%9B%9E%E6%94%BE-4.png" alt="钉钉直播回放-4.png" loading="lazy"></figure>
<ul>
<li>
<p>在Http Analyzer捕获到的记录中找到URL中包含<code>m3u8?</code>的记录。</p>
<p>注意：可通过图中的<code>类型</code>（application)和<code>域名</code>(alicdn.com)辅助定位。</p>
</li>
<li>
<p>在包含<code>m3u8?</code>的记录上右键，复制URL。</p>
<ul>
<li>复制的URL示例：</li>
</ul>
<p>http://dtliving-pre.alicdn.com/live_hp/1e1574d7-aa6a-405f-9de9-27973657c37f.m3u8?auth_key=1588947662-0-0-7799e42fb426a8bcc600766bf410389a&amp;cid=a1ab8ce69a081fcc35467b3c1659dd1f&amp;token2=0a199b8c83dc656dd8c9f6032aea9cccxdsIzWKsB0q3_pj7lwGPeg8C-n7Rn2DuBPbcogyXe8vD0cM33v8LqoS1uL56zvanTTmF7icNDQPnbUek3mQ5d-QUBAdfZXBQ2GQU09WsQlc=&amp;token=3a4174773a4fb6eda0904d9f232557abEnLchfYuGYysKSEAOt9xPqpWOxPYFHOAIeUtIELW27B6wYt5grM12cwhz-IEBwb9U99SQ_PeiGA-z7oqExT1q11ST73mDIZg6HS9CgKgkAE=&amp;app_type=Android&amp;version=5.0.9&amp;viewer_id=699672870&amp;uid=I9sdiOz9GT5RqsK7zI3R8w==</p>
</li>
</ul>
<figure data-type="image" tabindex="5"><img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E9%92%89%E9%92%89%E7%9B%B4%E6%92%AD%E5%9B%9E%E6%94%BE%E4%B8%8B%E8%BD%BD/%E9%92%89%E9%92%89%E7%9B%B4%E6%92%AD%E5%9B%9E%E6%94%BE-5.png" alt="钉钉直播回放-5.png" loading="lazy"></figure>
<ul>
<li>
<p>打开N_m3u8DL-CLI-SimpleG.exe文件。</p>
</li>
<li>
<p>在N_m3u8DL-CLI-SimpleG主界面中进行设置①<code>工作目录</code>（即下载文件保存目录），④勾选<code>合并后删除分片</code>。</p>
</li>
<li>
<p>在N_m3u8DL-CLI-SimpleG主界面中：</p>
<ul>
<li>②将复制的包含<code>m3u8?</code>记录的URL，粘贴至<code>M3U8地址</code>中。</li>
<li>③填写<code>视频标题</code>。</li>
</ul>
</li>
<li>
<p>⑤点击<code>GO(S)</code>，弹出下载窗口开始下载。</p>
</li>
<li>
<p>可在下载窗口中查看下载进度，下载完成后，下载窗口自动关闭。</p>
</li>
</ul>
<figure data-type="image" tabindex="6"><img src="https://gitee.com/cikorsky/blog-shijohn/raw/master/img/%E9%92%89%E9%92%89%E7%9B%B4%E6%92%AD%E5%9B%9E%E6%94%BE%E4%B8%8B%E8%BD%BD/%E9%92%89%E9%92%89%E7%9B%B4%E6%92%AD%E5%9B%9E%E6%94%BE-6.png" alt="钉钉直播回放-6.png" loading="lazy"></figure>
<h3 id="23-下载完成">2.3 下载完成</h3>
<ul>
<li>在<code>工作目录</code>中找到下载的直播回放视频即可播放。</li>
</ul>
<hr>
<p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>T</mi><mi>h</mi><mi>e</mi><mtext> </mtext><mi>E</mi><mi>n</mi><mi>d</mi><mi mathvariant="normal">.</mi></mrow><annotation encoding="application/x-tex">The\ End.
</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.69444em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault">h</span><span class="mord mathdefault">e</span><span class="mspace"> </span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="mord mathdefault">n</span><span class="mord mathdefault">d</span><span class="mord">.</span></span></span></span></span></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[让Win10内置输入法更好用]]></title>
        <id>https://shijohn.github.io/rang-win10-nei-zhi-shu-ru-fa-geng-hao-yong/</id>
        <link href="https://shijohn.github.io/rang-win10-nei-zhi-shu-ru-fa-geng-hao-yong/">
        </link>
        <updated>2021-04-22T06:44:02.000Z</updated>
        <summary type="html"><![CDATA[<p>Windows 10 打磨至今，已愈加成熟。作为一名产品人员，十分欣赏其所采用的迭代策略、反馈流程、以及内置的原厂软件设计。</p>
<p>输入法是系统操作中的超高频工具，顺手与否十分重要。Win 10 内置微软拼音，其实际使用体验已不输各类国产输入法，甚至在部分层面形成优势。</p>
<ul>
<li>系统内置，免安装</li>
<li>隐私保护，无弹窗广告推送</li>
<li>云输入加持，速度良好</li>
</ul>
<p>**但内置输入法的各类设置选项，恐怕很多人并没有仔细研究。**设置进入路径层级较多，需要三至四步操作，才可找到更具体的调整位置。</p>
<ul>
<li>路径：系统设置——语言——中文简体·选项——键盘——微软拼音选项</li>
</ul>
<p>请耐下心来，仔细调整一番，可以让我们的输入法更为好用。</p>
]]></summary>
        <content type="html"><![CDATA[<p>Windows 10 打磨至今，已愈加成熟。作为一名产品人员，十分欣赏其所采用的迭代策略、反馈流程、以及内置的原厂软件设计。</p>
<p>输入法是系统操作中的超高频工具，顺手与否十分重要。Win 10 内置微软拼音，其实际使用体验已不输各类国产输入法，甚至在部分层面形成优势。</p>
<ul>
<li>系统内置，免安装</li>
<li>隐私保护，无弹窗广告推送</li>
<li>云输入加持，速度良好</li>
</ul>
<p>**但内置输入法的各类设置选项，恐怕很多人并没有仔细研究。**设置进入路径层级较多，需要三至四步操作，才可找到更具体的调整位置。</p>
<ul>
<li>路径：系统设置——语言——中文简体·选项——键盘——微软拼音选项</li>
</ul>
<p>请耐下心来，仔细调整一番，可以让我们的输入法更为好用。</p>
<!--more-->
<p>原文转载自少数派：<a href="https://sspai.com/post/52101">https://sspai.com/post/52101</a></p>
<figure data-type="image" tabindex="1"><img src="https://cdn.sspai.com/2018/12/21/ddada055d23d459a3305bbaf49087ca0.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<h2 id="1词库功能"><strong>1.词库功能</strong></h2>
<p>微软是支持词库导入/导出的，但词库文件后缀为.dat。字典词库文件，输入法厂商均有自己的编码后缀，很难通用化使用。</p>
<pre><code>微软输入法，词库后缀为 .dat
QQ 输入法，词库后缀为 .qpyd
搜狗输入法，词库后缀为 .scel
微软输入法，词库后缀为 .dat
</code></pre>
<p>看缩写就能明白，各家都把词库文件当作护城河。商业模式指导下的产品思路，倒也无可厚非。</p>
<p><strong>但微软对「词库」的定义，其实分散在各个部分的，整合起来才能成为「完整的词库」。</strong></p>
<ul>
<li>自学习词汇</li>
<li>自定义短语</li>
<li>专业词典</li>
<li>新词热词</li>
</ul>
<h3 id="11-自学习词汇"><strong>1.1 自学习词汇</strong></h3>
<p>无法自行修改，只能在输入法学习过程中，由输入法自行控制。但其实这也是最好调教的地方：词汇准确输入一遍，第二次即可自动识别，属于各输入法的基础功能。</p>
<p>但是，你可以把当前账户的自学习词库导出备用，格式就是上文提到的.dat</p>
<figure data-type="image" tabindex="2"><img src="https://cdn.sspai.com/2018/12/21/c3b9388669c9558bd71bfec7fbbbc4d9.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<h3 id="12-自定义短语"><strong>1.2 自定义短语</strong></h3>
<p>输入法内置了大多数常用的短语，但我们依然可以进行自定义导入，以满足自身行业的特殊词汇需求。</p>
<ul>
<li>路径：输入法设置——词库和自学习——添加或编辑自定义短语</li>
</ul>
<p>请自行添加需要的短语，设定并习惯后，能有效提升输入效率。</p>
<figure data-type="image" tabindex="3"><img src="https://cdn.sspai.com/2018/12/21/68bcec13e8521996fdf3697e0cd19aa4.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="4"><img src="https://cdn.sspai.com/2018/12/21/916bb1c83867cd1154042ce2fec5d2fc.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="5"><img src="https://cdn.sspai.com/2018/12/21/3d6f8786e368e6438975b57790c398fa.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<h3 id="13-专业词典"><strong>1.3 专业词典</strong></h3>
<p><strong>专业词典选项会被大部分人忽略——因为它看起来默认开启，但没有完全启用。</strong></p>
<p>默认启用专业只包括：”计算机科学“、”电影“、”游戏”，其余“测绘学“、“建筑”、“林业“等内容默认关闭。</p>
<ul>
<li>路径：输入法设置——词库和自学习——选择启用哪些专业词典</li>
</ul>
<p>建议打开全部，这并不影响加载速度，但能改善部分生僻词汇输入环节的困扰。</p>
<figure data-type="image" tabindex="6"><img src="https://cdn.sspai.com/2018/12/21/97acd4a10423ad0098dbc5cdcb80a726.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<h3 id="14-新词热词"><strong>1.4 新词热词</strong></h3>
<p>开启后即可自动更新最新热词了，虽然效率没有搜狗高，但依旧能填补部分词语空白。</p>
<ul>
<li>路径：输入法设置——高级——新词热词</li>
</ul>
<figure data-type="image" tabindex="7"><img src="https://cdn.sspai.com/2018/12/21/28bed3aa623c75cd2cdea73bcd185ee1.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<h2 id="2特殊输入方法"><strong>2.特殊输入方法</strong></h2>
<p>除此之外，微软输入法还提供了人名输入/U输入/V输入等功能。</p>
<p><strong>「V模式」颇有意思，v键进入后，可快速输入中文年月日时间以及公式运算等。</strong></p>
<p>例如，你输入“v123”，在按a选择，呈现的结果就是“一百二十三”</p>
<p>v12:55，对应：十二时五十五分/ 12时55分 / 十二分五十五秒 等</p>
<p>v1989.08.12，对应：1989年08月12/  一九八九年八月十二日 等</p>
<figure data-type="image" tabindex="8"><img src="https://cdn.sspai.com/2018/12/21/38611dddf86f19bf7cbf5ba856952564.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p>**「U模式」则方便用户输入一些特殊符号。**如win笔记本键盘上并不存在的「」，就可以在输入 uubd 后找到。</p>
<p>虽然依旧较慢，必要时刻总比使用鼠标查找更便捷，对吧？</p>
<figure data-type="image" tabindex="9"><img src="https://cdn.sspai.com/2018/12/21/f5466d93da5986c9b935ebb530856923.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<p><strong>另外一些简化输入小技巧，可以自行探索尝试。</strong></p>
<ul>
<li>输入sjx，可以得到三角形 △ ▲</li>
<li>输入slh，可以得到省略号</li>
<li>输入pzh，可以得到中文破折号</li>
</ul>
<h2 id="3-双拼方案"><strong>3. 双拼方案</strong></h2>
<p>除了全拼方案，微软输入法也提供了双拼模式。</p>
<p>内置方案较少，只有微软双拼、智能ABC、自然码三种。好在微软提供了自定义工具，可以在某类码表基础上，对零声母、音节、按键等进行自定义，生成自己的专属方案。</p>
<figure data-type="image" tabindex="10"><img src="https://cdn.sspai.com/2018/12/21/8047e1659648d1da9544d9bbc80ce914.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<h2 id="4emoji-颜文字与符号面板"><strong>4.emoji、颜文字与符号面板</strong></h2>
<p>微软内置了emoji方案、颜文字、符号面板，使用 <strong>Ctrl + Shift + B</strong> 即可唤出。</p>
<p>emoji和颜文字对笔者并无用途，实在找不到使用场景。但符号面板的确实用，单位、序号、特殊、标点、数字、几何、字母，属于解决“平时用不到，想用找不到”痛点的好功能。</p>
<figure data-type="image" tabindex="11"><img src="https://cdn.sspai.com/2018/12/21/963538482c61bab6ca6a106ee9f64209.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="12"><img src="https://cdn.sspai.com/2018/12/21/57c8bf93dd0943c36520222bbb0af95e.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<figure data-type="image" tabindex="13"><img src="https://cdn.sspai.com/2018/12/21/74491596a60ec07037ddf0a41be048f6.png?imageView2/2/w/1120/q/90/interlace/1/ignore-error/1" alt="img" loading="lazy"></figure>
<h2 id="小结">小结</h2>
<p>原生输入法，始终是很多人的心头好。无论是 iOS 还是 Android，原生输入方式都存在大量的拥趸。</p>
<p>原生、稳定、简洁，如果能从「可用」进化到「好用」，就更完美了。希望微软对中文输入的打磨，更加精进吧。</p>
]]></content>
    </entry>
</feed>